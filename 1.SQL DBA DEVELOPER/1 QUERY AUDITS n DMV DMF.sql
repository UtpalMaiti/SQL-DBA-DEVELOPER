
-- HOW TO AUDIT LONG RUNNING QUERIES
		-- METHOD 1: USING ACTIVITY MONITOR (AM) TOOL. THIS TOOL IS AUTO INSTALLED WITH SQL SERVER MANAGEMENT STUDIO.
		-- METHOD 2: USING "PROCEDURE CACHE"- A MEMORY LOCATION TO STORE PARSE PLANS, COMPILED PLANS, EXECUTION PLANS


-- METHOD 1:	USING ACTIVITY MONITOR (AM) TOOL
	LAUNCH SSMS > CONNECT TO SQL SERVER > RIGHT CLICK SERVER > ACTIVITY MONITOR
	THEN WE SEE THE METRICS or COUNTERS FOR :
				1. PROCESSOR USAGE	
				2. WAITING TASKS
				3. DATABASE I/O
				4. BATCH REQUESTS / SECOND
				5. RECENT EXPENSIVE QUERIES		: SUCH QUERIES THAT WERE COMPLETED RECENTLY. USED MORE QUERY RESOURCES.
				6. ACTIVE EXPENSIVE QUERIES		: SUCH QUERIES THAT WERE STILL RUNNING. USING MORE QUERY RESOURCES.

	-- RUN THIS BELOW TEST QUERY:
SELECT * INTO TETABLE1 FROM SYSMESSAGES   -- NEW TABLE "TEST" IS CREATED

INSERT INTO TETABLE1  SELECT * FROM TETABLE1 


-- METHOD 2: USING PROCEDURE CACHE
SELECT * FROM SYS.DM_EXEC_QUERY_STATS
SELECT * FROM SYS.DM_EXEC_SQL_TEXT(0x06000200F23AD808605FB4234600000001000000000000000000000000000000000000000000000000000000)


SELECT  TOP 10 TEXT, total_worker_time / execution_count as AVG_EXEC_TIME
FROM SYS.DM_EXEC_QUERY_STATS		-- DYNAMIC MANAGEMENT VIEW
CROSS APPLY							-- THIS IS SIMILAR TO CROSS JOIN
SYS.DM_EXEC_SQL_TEXT (PLAN_HANDLE)
ORDER BY  AVG_EXEC_TIME DESC 



TUNING CONCEPTS:
		1.INDEXES
		2.STATISTICS

		3. PARTITIONS
		4. COMPRESSIONS

		5. INDEX FRAGMENTATION
		6. INDEX MANAGEMENT

		7. TUNING TOOLS
		8. EXECUTION PLAN ANALYSIS

		9. LOCK MANAGEMENT
		10. DEADLOCKS
*/
