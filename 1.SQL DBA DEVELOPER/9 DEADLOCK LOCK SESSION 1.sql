/*
DEADLOCK:
	A MECHANISM OF MUTUAL BLOCKING BETWEEN MULTIPLE SESSIONS / TRANSACTIONS.

	MEANS: 1ST SESSION BLOCKS 2ND SESSION AND ALSO THE 2ND SESSION BLOCKS 1ST SESSION.
	
	THE DEADLOCKS ARE AUTO DETECTED AND AUTO AVOIDED USING "LOCK MANAGER" COMPONENT.

	HOW TO IDENTIFY DEADLOCKS?
		USING "SQL PROFILER" TOOL.

	HOW TO AVOID DEADLOCKS?
		DEADLOCKS ARE AUTO AVOIDED BY "LOCK MANAGER" BY ROLLING BACK ONE OF THE TRANSACTIONS
		INVOLVED IN THE DEADLOCK.

	HOW TO PREVENT DEADLOCKS?
		BY PREVENTING THE QUERY BLOCKING SCENARIOS : LOCK HINTS & ISOLATION LEVELS

*/

USE tempdb
GO

CREATE TABLE tblOrders  
(
  ID INT NOT NULL PRIMARY KEY,
  TitleTag NVARCHAR(100) NOT NULL,
  Measure INT NOT NULL DEFAULT 0
)

INSERT INTO tblOrders VALUES  (111, 'Comedy', 1),  (112, 'NEGOT', 1),    (113, 'BUSINESS', 1)
SELECT * FROM tblOrders				-- 3 ROWS

SET DEADLOCK_PRIORITY LOW	-- MEANS: CURRENT SESSION CAN BE DEADLOCK VICTIM [auto rollback] INCASE OF ANY DEADLOCK.

BEGIN TRAN T1
UPDATE tblOrders SET Measure = 100
-- NOW, EXECUTE THE COMPLETE TRANSACTION T2 [IN OTHER SESSION WINDOW]


UPDATE tblInventory SET Measure = 10 -- T2 ALREADY HAS "U" LOCK ON THIS TABLE. SO, T1 WAITS.





