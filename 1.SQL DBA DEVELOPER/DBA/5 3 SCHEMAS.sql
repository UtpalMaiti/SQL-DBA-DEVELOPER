/*
SCHEMAS  : DATABASE OBJECTS USED TO GROUP MULTIPLE TABLES, VIEWS, PROCEDURES... 
PURPOSE  : USED FOR EASY DATA ACCESS AND EASY SECURITY MANAGEMENT
DEFAULT SCHEMA IS "DBO". MEANS, DATABASE OWNER. */

CREATE DATABASE [DB_OBJECTS]

USE [DB_OBJECTS]

-- ITEM #1. HOW TO CREATE SCHEMAS IN A DATABASE ? LIKE A FODLER IN OS DRIVE
CREATE SCHEMA SCHEMA1

CREATE SCHEMA SCHEMA2

-- ITEM #2. HOW TO CREATE THE TABLES USING THE SCHEMAS ?
CREATE TABLE SCHEMA1.TABLE1 (COL1 INT, COL2 INT)
CREATE TABLE SCHEMA1.TABLE2 (COL1 INT, COL2 INT)

-- ITEM #3: HOW TO STORE DATA INTO THE ABOVE TABLES ?
INSERT INTO SCHEMA1.TABLE1 VALUES (1,1), (2,2), (3,3)

-- ITEM #4: HOW TO REPORT DATA FROM ABOVE TABLES ?
SELECT * FROM TABLE1  -- ERROR									-- 1 PART NAMING CONVENTION
SELECT * FROM SCHEMA1.TABLE1									-- 2 PART NAMING CONVENTION
SELECT * FROM UNIVERSITYDATABASE.SCHEMA1.TABLE1					-- 3 PART NAMING CONVENTION

-- ITEM #5: HOW TO MOVE (MIGRATE) A TABLE FROM ONE SCHEMA TO ANOTHER ?
ALTER SCHEMA SCHEMA2 TRANSFER SCHEMA1.TABLE1

-- ITEM #6: HOW TO TEST THE ABOVE TABLE TRANSFER ?
SELECT * FROM SCHEMA2.TABLE1 
SELECT * FROM SCHEMA1.TABLE1					-- ERROR. REASON: TABLE IS TRANSFERRED

SELECT * FROM #TABLE1							-- ERROR. REASON : LOCAL TEMPORARY TABLE
SELECT * FROM ##TABLE2							-- NO ERROR. GLOBALLY ACCESSIBLE. ACROSS SERVER. 