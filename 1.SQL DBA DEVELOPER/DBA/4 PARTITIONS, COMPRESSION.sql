
USE [DB_OBJECTS]
GO

-- STEP 1:  VERIFY THE NUMBER OF PARTITIONS IN A TABLE:
SELECT * FROM SYS.PARTITIONS WHERE OBJECT_ID = OBJECT_ID('sales_data') 

-- STEP 2:  IMPLEMENT PARTITION ON THE TABLE
 
-- STEP 3:  VERIFY THE NUMBER OF PARTITIONS IN A TABLE:
SELECT * FROM SYS.PARTITIONS WHERE OBJECT_ID = OBJECT_ID('sales_data') 

-- STEP 4: CHECK THE USAGE OF PARTITIONS:
SELECT * FROM sales_data WHERE SalesAmount < 40			-- QO SCANS 1ST PARTITION

SELECT * FROM sales_data WHERE SalesAmount > 2000		-- QO SCANS 3RD PARTITION

-- POSSIBLE ISSUE	:	DML OPERATIONS ON THE TABLE NEEDS TO RE-ARRANGE THE TABLE DATA BASED ON PARTITIONS. SLOW DML PERFORMANCE.

-- CAUTION	:	USE PARTITIONS FOR OLD, HISTORICAL DATA  [COLD DATA]

-- STEP 5:	HOW TO COMPRESS A SPECIFIC PARTTIION:
-- COMPRESSION IS A MECHANISM TO IDENTIFY UNIQUE VALUES OF A COLUMN AND STORE SUCH VALUES ONLY ONCE. REFERNCE IN ROWS WHERE REQUIRED.

ALTER TABLE SALES_DATA 
REBUILD
PARTITION = 1
WITH
(
DATA_COMPRESSION = ROW				-- APPLICABLE IF MULTIPLE COLUMNS HAVE SIMILAR VALUE. EX:  GENDER &  MARITAL STATUS  HAVE SAME VALUE "M"
)


ALTER TABLE SALES_DATA 
REBUILD
PARTITION = 2
WITH
(
DATA_COMPRESSION = PAGE				-- APPLICABLE IF MULTIPLE ROWS HAVE SIMILAR VALUE. EX:  SAME PRODUCT SOLD TO SAME CUSTOMER WITH A DIFFERENT SALE ID	
)


SELECT * FROM SYS.PARTITIONS WHERE OBJECT_ID = OBJECT_ID('sales_data') 
