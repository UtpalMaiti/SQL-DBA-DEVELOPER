USE DBTRAN
GO
-- HOW TO MONITOR QUERY BLOCKING ?
EXEC SP_WHO2 


-- HOW TO MONITOR LOCKS ?
EXEC SP_LOCK			-- ANY LOCK WAIT RESULTS IN QUERY BLOCKING


-- HOW TO MONITOR ALL PROCESSES (ACTIVITES) IN THE SERVER ?
SELECT * FROM SYSPROCESSES WHERE BLOCKED != 0

use master 
-- HOW TO MANAGE LOCKS? 
-- SOLUTION : WE USE "ISOLATION LEVELS"
-- 1. READ UNCOMITTED ISOLATION LEVEL	: WE CAN READ UNCOMMITTED DATA ALSO. THIS IS SIMILAR TO NOLOCK LOCK HINT.
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SELECT * FROM Reservation						-- ISSUE : DIRTY READS

-- 2. READ COMITTED ISOLATION LEVEL		: WE CAN READ COMMITTED DATA ONLY IF THERE ARE NO PENDING COMMITS. DEFAULT ISOLATION LEVEL
SET TRANSACTION ISOLATION LEVEL READ COMMITTED
SELECT * FROM Reservation						-- ISSUE : QUERY BLOCKING

-- 3. SERIALIZABLE ISOLATION LEVEL
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE  -- READERS BLOCK WRITERS. WRITERS BLOCK READERS. 
SELECT * FROM Reservation						-- ISSUE : QUERY BLOCKING


-- 4. SNAPSHOT ISOLATION LEVEL		:	OPERATIVE DATA IS LOADED TO TEMPDB (PAGE LEVEL VERSIONS MAINTAINED IN TEMPDB). UNTIL COMMIT
USE MASTER 
ALTER DATABASE [DB_OBJECTS] SET ALLOW_SNAPSHOT_ISOLATION ON
USE DBTRAN
SET TRANSACTION ISOLATION LEVEL SNAPSHOT		-- NO BLOCKING AND NO DIRTY READS. THIS IS SIMILAR TO "READPAST" LOCK HINT.
SELECT * FROM Reservation


-- 5. REPEATABLE READ ISOLATION LEVEL
SET TRANSACTION ISOLATION LEVEL REPEATABLE READ	-- TO READ SAME TABLE MULTPLE TIMES WIHTIN A TRANSACTION. RESULTS IN PHANTOM READS
SELECT * FROM Reservation						-- LOCKS ARE ALLOCATED AT START OF TRANSACTION; RELEASED AT END OF TRANSACTION.



-- 6. READ COMMITTED SNAPSHOT ISOLATION LEVEL	-- SAME AS SNAPSHOT ISOLATION. ROWS ARE LOADED TO TEMPDB FOR FASTER EXECUTION = ROW VERSIONING. 
SET TRANSACTION ISOLATION LEVEL READ_COMMITTED_SNAPSHOT
SELECT * FROM Reservation						-- NO BLOCKING AND NO DIRTY READS. THIS IS SIMILAR TO "READPAST" LOCK HINT. FASTER.


/*
WHEN TO USE WHICH ISOLATION LEVEL ?
	READ UNCOMMITTED		:	 USED IN TESTING ENVIRONMENTS
	READ COMMITTED			:	 DEFAULT, FOR REGULAR DATABASES

	SERIALIZABLE			:	 FOR MISSION CRITICAL OPERATIONS LIKE PAYMENT GATEWAYS, ONLINE RESERVATIONS
	SNAPSHOT				:	 FOR CONDITIONAL COMMITS IN OLTP DATABASES

	REPEATABLE READ			:	 FOR REPORTING SCENARIOS @ SSRS, POWER BI, ETC..
	READ COMMITTED SNAPSHOT	:	 USED IN CASES OF HIGHER USAGE OF TEMPDB. FASTER. FOR OLTP AND DWH DATABASES

ALL ISOLATION LEVELS OPERATE AT SESSION LEVEL.
*/

DBCC USEROPTIONS		-- TO FIND THE ISOLATION LEVEL OF THE GIVEN (CURRENT) SESSION
