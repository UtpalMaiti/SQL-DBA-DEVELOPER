
USE [DB_OBJECTS]
GO

SELECT * FROM CUSTOMERS_DATA 
SELECT * FROM PRODUCTS_DATA 
SELECT * FROM TIME_DATA 
SELECT * FROM SALES_DATA 


-- Q1:	HOW TO REPORT YEAR WISE TOTAL SALES?
-- Q2:  HOW TO REPORT YEAR WISE, QUARTER WISE TOTAL SALES AND TOTAL TAX?
-- Q3:  HOW TO REPORT YEAR WISE, QUARTER WISE, MONTH WISE TOTAL SALES AND TOTAL TAX?
-- Q4:  HOW TO REPORT YEAR WISE, QUARTER WISE TOTAL SALES AND TOTAL TAX FOR JUNE MONTH ?
-- Q5:  HOW TO REPORT CLASS WISE, COLOR WISE PRODUCTS FOR EACH YEAR BASED ON ASC ORDER OF SALES?
-- Q6:	HOW TO REPORT TOTAL SALES FOR SUCH PRODUCTS WITH MAXIMUM NUMBER OF SALES?
-- Q7:	HOW TO REPORT TOTAL SALES FOR SUCH PRODUCTS EXCEPT WITH MINIMUM NUMBER OF SALES?
-- Q8:	HOW TO COMBINE THE RESULTS FROM ABOVE TWO QUERIES.
-- Q9:	HOW TO REPORT AVERAGE SALES AND AVERAGE TAX FOR ALL FEMALE CUSTOMERS FROM 2001 TO 2003 YEAR?
-- Q10: HOW TO REPORT YEAR WISE, CUSTOMER WISE, PRODUCT WISE TOTAL SALES AND TOTAL TAX ABOVE 1000 USD?
	
		

-- Q1:	HOW TO REPORT YEAR WISE TOTAL SALES?
SELECT T.CalendarYear, SUM(S.SalesAmount) AS TOTAL_SALES
FROM SALES_DATA  AS S
INNER JOIN TIME_DATA AS T
ON
S.OrderDateKey = T.TimeKey 
GROUP BY T.CalendarYear


-- Q2:  HOW TO REPORT YEAR WISE, QUARTER WISE TOTAL SALES AND TOTAL TAX?
SELECT T.CalendarYear, T.CalendarQuarter, 
SUM(S.SalesAmount) AS TOTAL_SALES, SUM(S.TAXAMT) AS TOTAL_TAX
FROM SALES_DATA  AS S
INNER JOIN TIME_DATA AS T
ON
S.OrderDateKey = T.TimeKey 
GROUP BY T.CalendarYear, T.CalendarQuarter


-- Q3:  HOW TO REPORT YEAR WISE, QUARTER WISE, MONTH WISE TOTAL SALES AND TOTAL TAX?
SELECT T.CalendarYear, T.CalendarQuarter, T.EnglishMonthName,
SUM(S.SalesAmount) AS TOTAL_SALES, SUM(S.TAXAMT) AS TOTAL_TAX
FROM SALES_DATA  AS S
INNER JOIN TIME_DATA AS T
ON
S.OrderDateKey = T.TimeKey 
GROUP BY T.CalendarYear, T.CalendarQuarter,  T.EnglishMonthName


-- Q4:  HOW TO REPORT YEAR WISE, QUARTER WISE TOTAL SALES AND TOTAL TAX FOR JUNE MONTH ?
SELECT T.CalendarYear, T.CalendarQuarter, 
SUM(S.SalesAmount) AS TOTAL_SALES, SUM(S.TAXAMT) AS TOTAL_TAX
FROM SALES_DATA  AS S
INNER JOIN TIME_DATA AS T
ON
S.OrderDateKey = T.TimeKey 
WHERE T.EnglishMonthName = 'JUNE'
GROUP BY T.CalendarYear, T.CalendarQuarter


-- Q5:  HOW TO REPORT CLASS WISE, COLOR WISE PRODUCTS FOR EACH YEAR BASED ON ASC ORDER OF SALES?
SELECT 
P.Class, P.Color, T.CalendarYear, P.EnglishProductName, 
SUM(S.SalesAmount) AS TOTAL_SALES
FROM SALES_DATA  AS S
INNER JOIN TIME_DATA AS T
ON
S.OrderDateKey = T.TimeKey 
INNER JOIN PRODUCTS_DATA AS P
ON
P.ProductKey = S.ProductKey
where 
P.Class IS NOT NULL
GROUP BY P.Class, P.Color, T.CalendarYear, P.EnglishProductName
ORDER BY TOTAL_SALES ASC


-- Q6: HOW TO REPORT TOTAL SALES FOR SUCH PRODUCT(S) WITH MAXIMUM NUMBER OF SALES?
CREATE VIEW VW_MAX_PROD_SALES 
AS 
SELECT EnglishProductName, COUNT(*) AS COUNT FROM PRODUCTS_DATA 
INNER JOIN SALES_DATA ON PRODUCTS_DATA.ProductKey =  SALES_DATA.ProductKey 
GROUP BY EnglishProductName 


SELECT EnglishProductName FROM VW_MAX_PROD_SALES WHERE COUNT = (SELECT MAX(COUNT) FROM VW_MAX_PROD_SALES)


-- REQ: HOW TO REPORT LIST OF ALL PRODUCTS AND THEIR SALES EXCEPT FOR SUCH PRODUCTS WITH MAXIMUM NUMBER OF SALES?
SELECT 
P.EnglishProductName,
SUM(S.SalesAmount) AS TOTAL_SALES
FROM SALES_DATA  AS S
INNER JOIN PRODUCTS_DATA AS P
ON
P.ProductKey = S.ProductKey
WHERE
P.EnglishProductName IN 
( SELECT EnglishProductName FROM VW_MAX_PROD_SALES WHERE COUNT = (SELECT MAX(COUNT) FROM VW_MAX_PROD_SALES) ) 
GROUP BY P.EnglishProductName
ORDER BY TOTAL_SALES DESC


-- Q7: HOW TO REPORT TOTAL SALES FOR SUCH PRODUCTS EXCEPT WITH MINIMUM NUMBER OF SALES?
SELECT 
P.EnglishProductName,
SUM(S.SalesAmount) AS TOTAL_SALES
FROM SALES_DATA  AS S
INNER JOIN PRODUCTS_DATA AS P
ON
P.ProductKey = S.ProductKey
WHERE
P.EnglishProductName NOT IN 
( SELECT EnglishProductName FROM VW_MAX_PROD_SALES WHERE COUNT = (SELECT MIN(COUNT) FROM VW_MAX_PROD_SALES) ) 
GROUP BY P.EnglishProductName
ORDER BY TOTAL_SALES DESC



-- TOP	:	TO REPORT SPECIFIED NUMBER OF ROWS FROM THE BEGINNING OF RESULT
-- OFFSET:	TO REPORT REMAINING ROWS EXCEPT THE SPECIIFED NUMBER OF ROWS FROM THE BEGINNING OF RESULT

SELECT * FROM PRODUCTS_DATA 

-- HOW TO REPORT 1 TO 10 ROWS?
SELECT TOP 10 * FROM PRODUCTS_DATA 

-- HOW TO REPORT ALL ROWS EXCEPT 1 TO 10 ?
SELECT * FROM PRODUCTS_DATA ORDER BY ProductKey OFFSET 10 ROW

-- HOW TO REPORT ALL ROWS 11 TO 15 ROWS?
SELECT * FROM PRODUCTS_DATA ORDER BY ProductKey OFFSET 10 ROW FETCH NEXT 5 ROWS ONLY

-- HOW TO REPORT 11TH ROW ONLY?
SELECT * FROM PRODUCTS_DATA ORDER BY ProductKey ASC OFFSET 10 ROW FETCH NEXT 1 ROWS ONLY



-- Q8: HOW TO COMBINE THE RESULTS FROM ABOVE TWO QUERIES ?
-- SOLUTION :  USE "UNION" STATEMENT OR "UNION ALL" STATEMENT
SELECT 
P.EnglishProductName,
SUM(S.SalesAmount) AS TOTAL_SALES
FROM SALES_DATA  AS S
INNER JOIN PRODUCTS_DATA AS P
ON
P.ProductKey = S.ProductKey WHERE P.ListPrice = (SELECT MIN(LISTPRICE) FROM PRODUCTS_DATA)
GROUP BY P.EnglishProductName
UNION ALL								-- TO COMBINE RESULT OF MULTIPLE QUERIES; IN ORDER. 
SELECT 
P.EnglishProductName,
SUM(S.SalesAmount) AS TOTAL_SALES
FROM SALES_DATA  AS S
INNER JOIN PRODUCTS_DATA AS P
ON
P.ProductKey = S.ProductKey  WHERE P.ListPrice = (SELECT MAX(LISTPRICE) FROM PRODUCTS_DATA)
GROUP BY P.EnglishProductName
ORDER BY TOTAL_SALES DESC





	
-- Q9:	HOW TO REPORT AVERAGE SALES AND AVERAGE TAX FOR ALL FEMALE CUSTOMERS FROM 2001 TO 2003 YEAR?
SELECT TIME_DATA.CalendarYear, CUSTOMERS_DATA.Gender,
AVG(SalesAmount) AS TOTAL_SALES, AVG(TaxAmt) AS TOTAL_TAX FROM SALES_DATA 
INNER JOIN 
CUSTOMERS_DATA 
ON
SALES_DATA.CustomerKey = CUSTOMERS_DATA.CustomerKey 
INNER JOIN 
TIME_DATA 
ON
SALES_DATA.OrderDateKey = TIME_DATA.TimeKey 
WHERE
CUSTOMERS_DATA.GENDER = 'F' 
AND
TIME_DATA.CalendarYear BETWEEN 2001 AND 2003 
GROUP BY  TIME_DATA.CalendarYear, CUSTOMERS_DATA.Gender


-- Q10: HOW TO REPORT YEAR WISE, CUSTOMER WISE, PRODUCT WISE TOTAL SALES AND TOTAL TAX ABOVE 1000 USD?
SELECT TIME_DATA.CalendarYear, CUSTOMERS_DATA.CustomerKey, PRODUCTS_DATA.EnglishProductName,
SUM(SalesAmount) AS TOTAL_SALES, SUM(TaxAmt) AS TOTAL_TAX FROM SALES_DATA 
INNER JOIN 
CUSTOMERS_DATA 
ON
SALES_DATA.CustomerKey = CUSTOMERS_DATA.CustomerKey 
INNER JOIN 
TIME_DATA 
ON
SALES_DATA.OrderDateKey = TIME_DATA.TimeKey
INNER JOIN
PRODUCTS_DATA 
ON
SALES_DATA.ProductKey = PRODUCTS_DATA.ProductKey 
GROUP BY  TIME_DATA.CalendarYear, CUSTOMERS_DATA.CustomerKey, PRODUCTS_DATA.EnglishProductName
HAVING 
SUM(SalesAmount) > 1000







