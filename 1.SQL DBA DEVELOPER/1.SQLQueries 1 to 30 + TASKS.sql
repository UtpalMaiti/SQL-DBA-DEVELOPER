-- QUERY 1: HOW TO CREATE NEW DATABASE?   
--CREATE   DATABASE 	[DB_OBJECTS]				

-- QUERY 2: HOW TO CONNECT TO ABOVE DATABASE? 
USE  [DB_OBJECTS]					

-- QUERY 3: HOW TO CREATE NEW TABLE IN ABOVE DATABASE?	WORKS ON ANY SERVER
CREATE TABLE EMPLOYEE_INFO			
(
	EMP_ID  INT,				-- this column stores DIGITS (NUMBERS) IN CRORES. 
    EMP_FNAME VARCHAR (30),		-- this column stores upto 30 CHARACTERS. TO STORE VARYING DATA. 
	EMP_LNAME VARCHAR (40),		-- this column stores upto 40 CHARACTERS. TO STORE VARYING DATA. 
	EMP_CNTRY CHAR(50),			-- this column stores upto 50 CHARACTERS. TO STORE FIXED DATA. EX: EMPLOYEE GENDER
	EMP_SAL  BIGINT				-- this column stores DIGITS (NUMBERS) IN TRILLIONS. 
)

--SELECT *  INTO EMPLOYEE_INFO FROM [master].[dbo].[EMPLOYEE_INFO]

-- QUERY 4:
INSERT INTO  EMPLOYEE_INFO VALUES (1001, 'AMIN', 'A', 'CANADA', 45678)	  

-- QUERY 5:
INSERT   EMPLOYEE_INFO VALUES	('1002', 'JOHN', 'A', 'CANADA', 643643),
								(1003, 'SAI', 'H', 'INDIA', 36363),
								(1004, 'SAISHA', 'T', 'INDIA', NULL), 
								(1005, 'SAISH', 'G', 'INDIA', 43643)

-- QUERY 6: WHAT IF WE DONT KNOW THE VALUE OF A COLUMN?
INSERT   EMPLOYEE_INFO VALUES (1006, 'AMIN', 'H', 'USA', NULL)    -- NULL MEANS "UNDEFINED" VALUE.

-- QUERY 7: EXAMPLE FOR A BATCH = BATCH : A COLLECTION OF SQL STATEMENTS.	 LIKE A PARAGRAPH IN A WORD DOCUMENT. 	
INSERT   EMPLOYEE_INFO VALUES (1007, 'AMINI', 'L', 'USA', 36363)			
INSERT   EMPLOYEE_INFO VALUES (1000, 'TEST', ' ', 'INDIA', NULL)
INSERT   EMPLOYEE_INFO VALUES (1008, 'TEST2', ' ', 'INDIA', NULL)

INSERT   EMPLOYEE_INFO VALUES (1000, 'TEST', ' ', 'INDIA', NULL)

-- QUERY 8: HOW TO REPORT / VERIFY ABOVE INSERTED DATA IN THE TABLE ?
SELECT * FROM EMPLOYEE_INFO

-- QUERY 9: HOW TO REPORT / VERIFY ABOVE INSERTED DATA IN THE TABLE? 
SELECT EMP_ID, EMP_LNAME, EMP_CNTRY, EMP_SAL, EMP_FNAME FROM EMPLOYEE_INFO

-- QUERY 10: HOW TO REPORT ALL EMPLOYEES WITH SALARY VALUE ABOVE 40K?
SELECT  *  FROM EMPLOYEE_INFO WHERE EMP_SAL > 40000

-- QUERY 11: HOW TO REPORT ALL EMPLOYEES FROM INDIA OR CANADA?
SELECT  *  FROM EMPLOYEE_INFO WHERE EMP_CNTRY = 'INDIA' OR EMP_CNTRY = 'CANADA'


-- QUERY 12: HOW TO REPORT ALL EMPLOYEES FROM INDIA OR CANADA? 
SELECT  *  FROM EMPLOYEE_INFO WHERE EMP_CNTRY IN ('INDIA','CANADA')


-- QUERY 13: HOW TO REPORT ALL EMPLOYEES EXCEPT FROM INDIA OR CANADA? 
SELECT  *  FROM EMPLOYEE_INFO WHERE EMP_CNTRY NOT IN ('INDIA','CANADA')

-- QUERY 14: HOW TO REPORT ALL EMPLOYEES WITH SALARY BETWEEN 30000 AND 60000?
SELECT  *  FROM EMPLOYEE_INFO WHERE EMP_SAL BETWEEN 30000 AND 60000

-- QUERY 15: HOW TO REPORT ALL EMPLOYEES WITH SALARY NOT BETWEEN 30000 AND 60000?
SELECT  *  FROM EMPLOYEE_INFO WHERE EMP_SAL NOT BETWEEN 30000 AND 60000


-- QUERY 16: HOW TO REPORT ALL EMPLOYEES WHOSE SALARY IS UNKNOWN?
-- TO COMPARE NULL VALUES, WE USE "IS" OPERATOR.
 SELECT  *  FROM EMPLOYEE_INFO WHERE EMP_SAL IS NULL


 
-- QUERY 17: HOW TO REPORT ALL EMPLOYEES WHOSE SALARY IS KNOWN?
 SELECT  *  FROM EMPLOYEE_INFO WHERE EMP_SAL IS NOT NULL


 -- QUERY 18: HOW TO REPORT ALL EMPLOYEES WHOSE FIRST NAME IS 'AMIN'?
 SELECT  *  FROM EMPLOYEE_INFO WHERE EMP_FNAME = 'AMIN'

-- QUERY 19: HOW TO REPORT ALL EMPLOYEES WHOSE FIRST NAME STARTS WITH LETTER 'A'?
 SELECT  *  FROM EMPLOYEE_INFO WHERE EMP_FNAME LIKE 'A%'   

-- QUERY 20: HOW TO REPORT ALL EMPLOYEES WHOSE FIRST NAME DOES NOT STARTS WITH LETTER 'A'?
 SELECT  *  FROM EMPLOYEE_INFO WHERE EMP_FNAME NOT LIKE 'A%'

-- QUERY 21: HOW TO REPORT ALL EMPLOYEES WHOSE FIRST NAME CONTAINS 4 CHARACTERS ?
 SELECT  *  FROM EMPLOYEE_INFO WHERE EMP_FNAME LIKE '____'	-- EACH CHARACTER NEEDS A _ . SPECIFY 4 UNDERSCORES

 -- %  : TO REPRESENT ANY NUMBER OF CHARACTERS				
 -- _  : TO REPRESENT A SINGLE CHARACTER


 -- HOW TO REPORT LIST OF ALL EMPLOYEES WHOSE FIRST NAME ENDS WITH LETTER N?
  SELECT  *  FROM EMPLOYEE_INFO WHERE EMP_FNAME LIKE   '%N' 

 -- HOW TO REPORT LIST OF ALL EMPLOYEES WHOSE FIRST NAME ENDS WITH LETTER N AND WITH TOTAL OF 4 CHARACTERS ONLY?
  SELECT  *  FROM EMPLOYEE_INFO WHERE EMP_FNAME LIKE   '___N' 
  

-- QUERY 22: HOW TO REPORT ALL EMPLOYEES FROM CANADA, THEN EMPLOYEES FROM INDIA?
  SELECT  *  FROM EMPLOYEE_INFO WHERE EMP_CNTRY = 'INDIA' 
  UNION ALL					-- COMBINES RESULT (OUTPUT) FROM MULTIPLE QUERIES. ORDER OF OUTPUT IS GUARANTEED. POSSIBLE DUPLCIATES
  SELECT  *  FROM EMPLOYEE_INFO WHERE EMP_CNTRY = 'CANADA' 


  -- QUERY 22: HOW TO REPORT ALL EMPLOYEES FROM CANADA, THEN EMPLOYEES FROM INDIA?
  SELECT  *  FROM EMPLOYEE_INFO WHERE EMP_CNTRY = 'INDIA' 
  UNION						-- COMBINES RESULT (OUTPUT) FROM MULTIPLE QUERIES. ORDER OF OUTPUT NOT GUARANTEED. NO DUPLCIATES
  SELECT  *  FROM EMPLOYEE_INFO WHERE EMP_CNTRY = 'CANADA' 

-- QUERY 23 : HOW TO REPORT ALL EMPLOYEES WITH ASCENDING ORDER OF SALARIES? 
SELECT  *  FROM EMPLOYEE_INFO ORDER BY EMP_SAL ASC   -- ORDER BY IS USED TO SORT THE DATA. ASC  = LOW TO HIGH

-- QUERY 24: HOW TO REPORT ALL EMPLOYEES WITH DESCENDING ORDER OF SALARIES? 
SELECT  *  FROM EMPLOYEE_INFO ORDER BY EMP_SAL DESC		-- DESCENDING ORDER = HIGH TO LOW

-- QUERY 25 : HOW TO REPORT TOP 3 EMPLOYEES WITH HIGHEST SALARY ?
SELECT  TOP 3 *  FROM EMPLOYEE_INFO ORDER BY EMP_SAL DESC

SELECT  TOP 6 EMP_ID, EMP_FNAME,EMP_SAL  FROM EMPLOYEE_INFO ORDER BY EMP_SAL DESC

-- QUERY 26 : HOW TO REPORT 3RD AND REMAINING ALL EMPLOYEES ? 
 SELECT * FROM EMPLOYEE_INFO ORDER BY EMP_ID
 SELECT * FROM EMPLOYEE_INFO ORDER BY EMP_ID ASC OFFSET 2 ROWS		
 SELECT * FROM EMPLOYEE_INFO ORDER BY EMP_ID ASC OFFSET 1 ROWS		
 SELECT * FROM EMPLOYEE_INFO ORDER BY EMP_ID ASC OFFSET 3 ROWS		

-- QUERY 27 : HOW TO REPORT 3RD AND REMAINING 3 EMPLOYEES ? 
SELECT * FROM EMPLOYEE_INFO ORDER BY EMP_ID ASC OFFSET 2 ROWS FETCH NEXT 3 ROWS ONLY 

-- QUERY 28 - 30 : HOW TO REPORT EMPLOYEE FULL NAME ?
SELECT  * FROM EMPLOYEE_INFO
SELECT  EMP_ID, EMP_FNAME, EMP_LNAME FROM EMPLOYEE_INFO

SELECT  EMP_ID, EMP_FNAME + EMP_LNAME FROM EMPLOYEE_INFO	-- APPEND MEANS TO ADD. TO COMBINE CHARACTER DATA. NOTE: COLUMN NAME IS MISSING
SELECT  EMP_ID, EMP_FNAME + EMP_LNAME AS FullName FROM EMPLOYEE_INFO  -- AS MEANS : ALIASING. GIVING A NEW NAME TO THE COLUMN
SELECT  EMP_ID, EMP_FNAME + EMP_LNAME AS "Full Name" FROM EMPLOYEE_INFO
SELECT  EMP_ID, EMP_FNAME + EMP_LNAME AS [Full Name] FROM EMPLOYEE_INFO

/*
IN				NOT IN
BETWEEN			NOT BETWEEN
LIKE			NOT LIKE
IS				IS NOT

ASC				DESC
UNION			UNION ALL
OFFSET			FETCH NEXT
*/

SELECT * FROM EMPLOYEE_INFO

-- OPTIONAL TO PRACTICE: 
-- HOW TO MODIFY DATA IN ABOVE TABLE?
UPDATE		EMPLOYEE_INFO		SET EMP_SAL = 10000  WHERE EMP_SAL IS NULL

-- HOW TO REMOVE DATA FROM ABOVE TABLE?									OPPOSITE TO INSERT TABLE
DELETE		EMPLOYEE_INFO							WHERE EMP_SAL = 10000		-- CONDITIONAL. SLOW

TRUNCATE	TABLE EMPLOYEE_INFO													-- UNCONDITIONAL. FAST

-- HOW TO MODIFY STRUCTURE OF ABOVE TABLE TO ADD NEW COLUMN?			
ALTER TABLE EMPLOYEE_INFO ADD EMP_GENDER CHAR(5)

-- HOW TO REMOVE THE TABLE FROM THE DATABASE ITSELF ?					OPPOSITE TO CREATE TABLE
DROP TABLE EMPLOYEE_INFO

--TASK 1: HOW TO REPORT LIST OF ALL EMPLOYEES WITH MAXIMUM SALARY?
USE [EMPLOYEE_DB] 
GO

SELECT  * ,
LAST_VALUE([EMP_SAL])OVER ( ORDER  BY [EMP_SAL] ASC  
RANGE BETWEEN 
            UNBOUNDED PRECEDING AND 
            UNBOUNDED FOLLOWING) AS MAXIMUM_SALARY FROM EMPLOYEE_INFO E 

--TASK 2: HOW TO REPORT LIST OF ALL EMPLOYEES WITH MINIMUM SALARY?

SELECT  * ,
FIRST_VALUE([EMP_SAL])OVER ( ORDER  BY [EMP_SAL] ASC  
RANGE BETWEEN 
            UNBOUNDED PRECEDING AND 
            UNBOUNDED FOLLOWING) AS MINIMUM_SALARY FROM EMPLOYEE_INFO E 

--TASK 3: HOW TO REPORT LIST OF ALL EMPLOYEES WITH MINIMUM OR MAXIMUM SALARY?
SELECT  * ,
FIRST_VALUE([EMP_SAL])OVER ( ORDER  BY [EMP_SAL] ASC  
			RANGE BETWEEN 
            UNBOUNDED PRECEDING AND 
            UNBOUNDED FOLLOWING) AS MINIMUM_SALARY ,
LAST_VALUE([EMP_SAL])OVER ( ORDER  BY [EMP_SAL] ASC  
			RANGE BETWEEN 
            UNBOUNDED PRECEDING AND 
            UNBOUNDED FOLLOWING) AS MAXIMUM_SALARY
FROM EMPLOYEE_INFO E 

--TASK 4: HOW TO REPORT LIST OF ALL EMPLOYEES WITH MINIMUM OR MAXIMUM SALARY IN A SPECIFIC ORDER?

SELECT  * ,
FIRST_VALUE([EMP_SAL])OVER ( ORDER  BY [EMP_SAL] ASC  
			RANGE BETWEEN 
            UNBOUNDED PRECEDING AND 
            UNBOUNDED FOLLOWING) AS MINIMUM_SALARY ,
LAST_VALUE([EMP_SAL])OVER ( ORDER  BY [EMP_SAL] ASC  
			RANGE BETWEEN 
            UNBOUNDED PRECEDING AND 
            UNBOUNDED FOLLOWING) AS MAXIMUM_SALARY
FROM EMPLOYEE_INFO E 
ORDER BY [EMP_SAL] ASC

SELECT  * ,
FIRST_VALUE([EMP_SAL])OVER ( ORDER  BY [EMP_SAL] ASC  
			RANGE BETWEEN 
            UNBOUNDED PRECEDING AND 
            UNBOUNDED FOLLOWING) AS MINIMUM_SALARY ,
LAST_VALUE([EMP_SAL])OVER ( ORDER  BY [EMP_SAL] ASC  
			RANGE BETWEEN 
            UNBOUNDED PRECEDING AND 
            UNBOUNDED FOLLOWING) AS MAXIMUM_SALARY
FROM EMPLOYEE_INFO E 
ORDER BY [EMP_SAL] DESC

--TASK 5: HOW TO REPORT LIST OF ALL EMPLOYEES WITH MINIMUM SALARY FROM INDIA?

SELECT  * ,
FIRST_VALUE([EMP_SAL])OVER ( ORDER  BY [EMP_SAL] ASC  
			RANGE BETWEEN 
            UNBOUNDED PRECEDING AND 
            UNBOUNDED FOLLOWING) AS MINIMUM_SALARY ,
LAST_VALUE([EMP_SAL])OVER ( ORDER  BY [EMP_SAL] ASC  
			RANGE BETWEEN 
            UNBOUNDED PRECEDING AND 
            UNBOUNDED FOLLOWING) AS MAXIMUM_SALARY
FROM EMPLOYEE_INFO E WHERE [EMP_CNTRY] IN ('INDIA')
ORDER BY [EMP_SAL] DESC

--TASK 6: HOW TO REPORT LIST OF ALL EMPLOYEES WITH MAXIMUM SALARY FROM INDIA?

SELECT  * ,
FIRST_VALUE([EMP_SAL])OVER ( ORDER  BY [EMP_SAL] ASC  
			RANGE BETWEEN 
            UNBOUNDED PRECEDING AND 
            UNBOUNDED FOLLOWING) AS MINIMUM_SALARY ,
LAST_VALUE([EMP_SAL])OVER ( ORDER  BY [EMP_SAL] ASC  
			RANGE BETWEEN 
            UNBOUNDED PRECEDING AND 
            UNBOUNDED FOLLOWING) AS MAXIMUM_SALARY
FROM EMPLOYEE_INFO E WHERE [EMP_CNTRY] IN ('INDIA')
ORDER BY [EMP_SAL] DESC

--TASK 7: HOW TO REPORT LIST OF ALL EMPLOYEES WITH MAXIMUM SALARY FROM INDIA WITH NAME STARTING WITH LETTER A ?

SELECT  * ,
FIRST_VALUE([EMP_SAL])OVER ( ORDER  BY [EMP_SAL] ASC  
			RANGE BETWEEN 
            UNBOUNDED PRECEDING AND 
            UNBOUNDED FOLLOWING) AS MINIMUM_SALARY ,
LAST_VALUE([EMP_SAL])OVER ( ORDER  BY [EMP_SAL] ASC  
			RANGE BETWEEN 
            UNBOUNDED PRECEDING AND 
            UNBOUNDED FOLLOWING) AS MAXIMUM_SALARY
FROM EMPLOYEE_INFO E WHERE [EMP_CNTRY] IN ('INDIA') AND [EMP_FNAME] LIKE 'A%'
ORDER BY [EMP_SAL] DESC

--TASK 8: HOW TO REPORT LIST OF ALL EMPLOYEES WITH MINIMUM SALARY FROM INDIA WITH NAME ENDING WITH LETTER N ?

SELECT  * ,
FIRST_VALUE([EMP_SAL])OVER ( ORDER  BY [EMP_SAL] ASC  
			RANGE BETWEEN 
            UNBOUNDED PRECEDING AND 
            UNBOUNDED FOLLOWING) AS MINIMUM_SALARY ,
LAST_VALUE([EMP_SAL])OVER ( ORDER  BY [EMP_SAL] ASC  
			RANGE BETWEEN 
            UNBOUNDED PRECEDING AND 
            UNBOUNDED FOLLOWING) AS MAXIMUM_SALARY
FROM EMPLOYEE_INFO E WHERE [EMP_CNTRY] IN ('INDIA') AND [EMP_FNAME] LIKE '%N'
ORDER BY [EMP_SAL] DESC

--TASK 9: HOW TO REPORT LIST OF ALL EMPLOYEES WITH HIGHEST SALARY ?

SELECT  * ,
FIRST_VALUE([EMP_SAL])OVER ( ORDER  BY [EMP_SAL] ASC  
			RANGE BETWEEN 
            UNBOUNDED PRECEDING AND 
            UNBOUNDED FOLLOWING) AS MINIMUM_SALARY ,
LAST_VALUE([EMP_SAL])OVER ( ORDER  BY [EMP_SAL] ASC  
			RANGE BETWEEN 
            UNBOUNDED PRECEDING AND 
            UNBOUNDED FOLLOWING) AS MAXIMUM_SALARY
FROM EMPLOYEE_INFO E
ORDER BY [EMP_SAL] DESC

--TASK 10: HOW TO REPORT LIST OF ALL EMPLOYEES WITH SALARY VALUE ABOVE THE MINIMUM SALARY ?

DECLARE @MINSAL BIGINT=0;
SELECT @MINSAL=MIN(ISNULL([EMP_SAL],0)) FROM EMPLOYEE_INFO;
SELECT  * ,
FIRST_VALUE([EMP_SAL])OVER ( ORDER  BY [EMP_SAL] ASC  
			RANGE BETWEEN 
            UNBOUNDED PRECEDING AND 
            UNBOUNDED FOLLOWING) AS MINIMUM_SALARY ,
LAST_VALUE([EMP_SAL])OVER ( ORDER  BY [EMP_SAL] ASC  
			RANGE BETWEEN 
            UNBOUNDED PRECEDING AND 
            UNBOUNDED FOLLOWING) AS MAXIMUM_SALARY
FROM EMPLOYEE_INFO E 
WHERE [EMP_SAL]>@MINSAL

--Email:		saiphanindrait@gmail.com
--Call:		+91 9030040801  [whatsapp]  or call. 1 PM to 3 PM IST  & 9 PM to 11 PM IST.



