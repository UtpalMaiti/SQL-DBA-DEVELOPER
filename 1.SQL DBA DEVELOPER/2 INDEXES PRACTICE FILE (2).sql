--CREATE DATABASE INDEXDATABASE1
--GO
--USE INDEXDATABASE1
--GO


USE [DB_OBJECTS]

CREATE TABLE STUDENTS
(
STD_ID INT, 
STD_NAME VARCHAR(30), 
STD_AGE FLOAT, 
STD_COURSE VARCHAR(30)
)

INSERT STUDENTS VALUES	(1001, 'AMIN', 23.5,'COMPUTERS'),  (1002, 'SAM', 23.5,'CIVIL'), 
				 (1003, 'AMINI', 23.5,'CIVIL'),  (1004, 'JOHN', 23.5,'COMPUTERS'), 
				 (1005, 'JEFF', 23.5,'COMPUTERS')

SELECT * FROM   STUDENTS			


-- EXAMPLE FOR CLUSTERED INDEX
CREATE CLUSTERED INDEX INDX1	
ON STUDENTS (STD_ID ASC)
WITH
(
FILLFACTOR = 80,			-- EACH INDEX PAGE IS FILLED ONLY 80%. DEFAULT FILL FACTOR = 100%
PAD_INDEX = ON,				-- ABOVE FILL FACTOR IS APPLIED ON DATA PAGES ALSO
ONLINE = ON					-- ONLINE INDEX. AVAILABLE FOR USE DURING THEIR CREATION ITSELF
)	
ON [PRIMARY]
	

-- EXAMPLE FOR NONCLUSTERED INDEXES
-- REGULAR NONCLUSTERED INDEX
CREATE NONCLUSTERED INDEX INDX2 ON	STUDENTS (STD_COURSE)

-- INCLUDED NONCLUSTERED INDEX  
CREATE NONCLUSTERED INDEX INDX3	ON	STUDENTS (STD_COURSE) INCLUDE (STD_ID, STD_NAME, STD_AGE)

-- COLUMNSTORE NONCLUSTERED INDEX  : 
CREATE NONCLUSTERED COLUMNSTORE  INDEX INDX4	ON	STUDENTS(STD_COURSE)

-- HOW TO DROP AN INDEX?
DROP INDEX STUDENTS.INDX4

-- FILTERED INDEX 
CREATE NONCLUSTERED INDEX INDX5	ON STUDENTS(STD_COURSE) WHERE STD_COURSE ='COMPUTERS'


-- COVERING INDEX
SELECT STD_ID, STD_NAME, STD_AGE  FROM STUDENTS	WHERE STD_COURSE = 'COMPUTERS'   -- INDX3 IS COVERING INDEX
SELECT STD_COURSE  FROM STUDENTS	WHERE STD_COURSE = 'COMPUTERS'				 -- INDX2, INDX 4 IS COVERING INDEX


-- QUERY OPTIMIZER GIVES PRIORITY FOR COVERING INDEX. NEXT PRIORITY FOR CLUSTERED INDEX. THEN FOR NONCLUSTERED.

-- INDEXED VIEW :  QUERY  + ITS RESULT [DATA]
CREATE VIEW INDX_VW  WITH SCHEMABINDING AS		SELECT STD_ID, STD_NAME,STD_COURSE  FROM DBO.STUDENTS

GO

CREATE UNIQUE CLUSTERED INDEX mat_index ON INDX_VW(STD_ID)

-- SCHEMABINDING :  PROPERTY TO PREVENT STRUCTURAL CHANGES ON THE BASE TABLE & COLUMNS USED IN THE VIEW.
-- MEANS, WE CANNOT RENAME / DROP / ALTER STD_ID, STD_NAME,STD_COURSE COLUMNS FROM STUDENTS TABLE.

-- STATISTICS : ADDITIONAL OBJECTS USED TO STORE COLUMN ADDRESS
-- FOR EASY REFERENCE TO DATA PAGES.

-- STATISTICS OPERATE ON TABLE COLUMNS
-- AUTO CREATED IN RESPONSE TO INDEX CREATIONS & COLUMNS USAGE IN THE QUERY CONDITIONS.

-- THESE STATISTICS WILL BE USED BY QUERY OPTIMIZER TO ENSURE THE BEST QUERY EXECUTION.

SELECT * FROM SYS.STATS			-- TO REPORT LIST OF ALL STATISTCS FROM THE DATABASE.
SELECT * FROM SYS.INDEXES		-- TO REPORT LIST OF ALL INDEXES FROM THE DATABASE

-- GIVEN A TABLE, HOW TO REPORT LIST OF ALL INDEXES?
SELECT * FROM SYS.INDEXES WHERE OBJECT_NAME(OBJECT_ID) = 'STUDENTS'

-- GIVEN A TABLE, HOW TO REPORT LIST OF ALL STATISTICS?
SELECT * FROM SYS.STATS WHERE OBJECT_NAME(OBJECT_ID) = 'STUDENTS'

-- TO ENSURE OPTIMAL EXECUTION OF THE QUERIES:
UPDATE STATISTICS  STUDENTS




